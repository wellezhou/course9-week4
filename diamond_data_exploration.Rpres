Exploration of Diamond Data
========================================================
author: Wei Zhou
date: 4/29/2019
autosize: true

Introduction
========================================================

The shiny app was designed to explore the "diamonds" dataset in R's ggplot2 package. The app can be found at https://wellezhou.shinyapps.io/Diamond_data_explore/.

Functions:

- There are 53,940 rows of data, the app can randomly select the desired sample side in the slide bar;
- The user can choose the variables to plot for the X and Y axis.
- The data can be colored using cut quality, clarity, also panels can be added in the "facet row" and "facet column".

ui.R Code
========================================================
```{r}
library(shiny)
library(ggplot2)
dataset <- subset(diamonds,select=c("carat","cut","color","clarity","price"))
pageWithSidebar(
  headerPanel(h3("Diamonds Data Explorer")),
  sidebarPanel(
    sliderInput('sampleSize', 'Sample Size', min=1, max=nrow(dataset),value=min(1000, nrow(dataset)), step=500, round=0),
    selectInput('x', 'X', names(dataset)),
    selectInput('y', 'Y', names(dataset), names(dataset)[[2]]),
    selectInput('color', 'Color', c('None', names(dataset))),
    checkboxInput('smooth', 'Smooth'),
    selectInput('facet_row', 'Facet Row', c(None='.', names(dataset))),
    selectInput('facet_col', 'Facet Column', c(None='.', names(dataset)))),
  mainPanel(plotOutput('plot'))
)
```

Server.R Code
========================================================
```{r}
library(shiny)
library(ggplot2)

function(input, output){
  dataset <- reactive({
    diamonds[sample(nrow(diamonds), input$sampleSize),]
  })
    
  output$plot <- renderPlot({
    p <- ggplot(dataset(), aes_string(x=input$x, y=input$y)) + geom_point()

    if(input$color != 'None')
      p <- p + aes_string(color=input$color)
      facets <- paste(input$facet_row, '~', input$facet_col)
    if (facets != '. ~ .')
      p <- p + facet_grid(facets)
    if (input$smooth) 
      p <- p + geom_smooth()
      print(p)
  }, height=700)
}
```

Shiny App Interface
========================================================
![Text](1.png)
